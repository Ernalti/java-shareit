DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS booking;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS requests;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR,
    email VARCHAR,
    CONSTRAINT email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    description VARCHAR NOT NULL,
    requestor INT REFERENCES users (id) ON DELETE CASCADE,
    created TIMESTAMP
);

CREATE TABLE IF NOT EXISTS items (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR,
    description VARCHAR,
    available BOOLEAN,
    owner INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    request INT REFERENCES requests (id)
);

CREATE TABLE IF NOT EXISTS booking (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    start_booking TIMESTAMP,
    end_booking TIMESTAMP,
    item INT NOT NULL REFERENCES items (id) ON DELETE CASCADE,
    booker INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    status VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS comments (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    text VARCHAR NOT NULL,
    item INT NOT NULL REFERENCES items (id) ON DELETE CASCADE,
    author INT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    created TIMESTAMP NOT NULL
);